# Run as Administrator!
Write-Host "Starting VM optimization script..." -ForegroundColor Cyan

# Function to stop and disable a Windows service by name
function Disable-ServiceSafe {
    param([string]$svcName)
    $svc = Get-Service -Name $svcName -ErrorAction SilentlyContinue
    if ($svc) {
        if ($svc.Status -eq 'Running') {
            Write-Host "Stopping $svcName"
            Stop-Service -Name $svcName -Force
        }
        Write-Host "Disabling $svcName"
        Set-Service -Name $svcName -StartupType Disabled
    } else {
        Write-Host "$svcName not found"
    }
}

# List of services to aggressively disable
$servicesToDisable = @(
    "WSearch", "Spooler", "WaaSMedicSvc", "Fax", "bthserv", "WlanSvc",
    "RemoteRegistry", "SysMain", "TabletInputService", "WerSvc", "DoSvc",
    "CscService", "RetailDemo", "diagnosticshub.standardcollector.service",
    "DiagTrack", "dmwappushservice", "MapsBroker", "PcaSvc", "PrintNotify",
    "TrkWks", "XblGameSave", "XboxNetApiSvc", "XboxGipSvc", "XblAuthManager",
    "lfsvc", "PhoneSvc", "shpamsvc", "wisvc"
)

foreach ($svcName in $servicesToDisable) {
    Disable-ServiceSafe -svcName $svcName
}

# Also target by display name for Xbox-related services
$displayNames = @(
    "Xbox Live Auth Manager", "Xbox Live Game Save",
    "Xbox Accessory Management Service", "Xbox Live Networking Service"
)
foreach ($displayName in $displayNames) {
    $svc = Get-Service | Where-Object { $_.DisplayName -eq $displayName }
    if ($svc) {
        if ($svc.Status -eq 'Running') {
            Write-Host "Stopping service (DisplayName): $displayName"
            Stop-Service -Name $svc.Name -Force
        }
        Write-Host "Disabling service (DisplayName): $displayName"
        Set-Service -Name $svc.Name -StartupType Disabled
    }
}

# Disable Defender via Registry
$defenderReg = "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender"
if (-not (Test-Path $defenderReg)) {
    New-Item -Path $defenderReg -Force | Out-Null
}
New-ItemProperty -Path $defenderReg -Name "DisableAntiSpyware" -PropertyType DWord -Value 1 -Force

$rtpPath = "$defenderReg\Real-Time Protection"
if (-not (Test-Path $rtpPath)) {
    New-Item -Path $rtpPath -Force | Out-Null
}
New-ItemProperty -Path $rtpPath -Name "DisableRealtimeMonitoring" -PropertyType DWord -Value 1 -Force

# Disable Delivery Optimization (DoSvc) via Registry
$doReg = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\DeliveryOptimization"
if (-not (Test-Path $doReg)) {
    New-Item -Path $doReg -Force | Out-Null
}
New-ItemProperty -Path $doReg -Name "DODownloadMode" -PropertyType DWord -Value 0 -Force

# Disable Windows Error Reporting via Registry
$werReg = "HKLM:\SOFTWARE\Microsoft\Windows\Windows Error Reporting"
if (-not (Test-Path $werReg)) {
    New-Item -Path $werReg -Force | Out-Null
}
New-ItemProperty -Path $werReg -Name "Disabled" -PropertyType DWord -Value 1 -Force

# Disable Hibernation (saves disk space on VMs)
Write-Host "Disabling hibernation"
powercfg -h off

# Set power plan to high performance
Write-Host "Setting power plan to High performance"
$guid = (powercfg /L | Select-String -Pattern "High performance" | ForEach-Object { $_.ToString().Split()[3] })
if ($guid) {
    powercfg /S $guid
}

# Block Edge background tasks via registry
$edgeBgKey = "HKLM:\SOFTWARE\Policies\Microsoft\MicrosoftEdge\Main"
if (-not (Test-Path $edgeBgKey)) { New-Item -Path $edgeBgKey -Force | Out-Null }
New-ItemProperty -Path $edgeBgKey -Name "AllowPrelaunch" -PropertyType DWord -Value 0 -Force
New-ItemProperty -Path $edgeBgKey -Name "AllowTabPreloading" -PropertyType DWord -Value 0 -Force

$edgeChromiumKey = "HKLM:\SOFTWARE\Policies\Microsoft\Edge"
if (-not (Test-Path $edgeChromiumKey)) { New-Item -Path $edgeChromiumKey -Force | Out-Null }
New-ItemProperty -Path $edgeChromiumKey -Name "BackgroundModeEnabled" -PropertyType DWord -Value 0 -Force
New-ItemProperty -Path $edgeChromiumKey -Name "StartupBoostEnabled" -PropertyType DWord -Value 0 -Force

# Disable Edge Update and background tasks
Get-ScheduledTask | Where-Object {$_.TaskName -like "*Edge*"} | Disable-ScheduledTask

# Registry to kill Defender and real-time monitoring
$defenderReg = "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender"
if (-not (Test-Path $defenderReg)) { New-Item -Path $defenderReg -Force | Out-Null }
New-ItemProperty -Path $defenderReg -Name "DisableAntiSpyware" -PropertyType DWord -Value 1 -Force

$rtpPath = "$defenderReg\Real-Time Protection"
if (-not (Test-Path $rtpPath)) { New-Item -Path $rtpPath -Force | Out-Null }
New-ItemProperty -Path $rtpPath -Name "DisableRealtimeMonitoring" -PropertyType DWord -Value 1 -Force

# Kill running Defender processes (will not always succeed, but try)
Get-Process MsMpEng -ErrorAction SilentlyContinue | Stop-Process -Force


Write-Host "Optimization complete. Reboot for all changes to take effect." -ForegroundColor Green
