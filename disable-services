# Disable unnecessary services for a dedicated AMP game server
# Use with care. Requires Administrator privileges.

# List of services to disable
$servicesToDisable = @(
    "WSearch",            # Windows Search
    "Spooler",            # Print Spooler
    "WaaSMedicSvc",       # Windows Update Medic Service
    "XblGameSave",        # Xbox Live Game Save
    "XboxNetApiSvc",      # Xbox Live Networking Service
    "XboxGipSvc",         # Xbox Accessory Management Service
    "XblAuthManager",     # Xbox Live Auth Manager
    "Fax",                # Fax
    "bthserv",            # Bluetooth Support Service
    "WlanSvc",            # WLAN AutoConfig
    "RemoteRegistry",     # Remote Registry
    "SysMain",            # Superfetch / SysMain
    "TabletInputService", # Tablet PC Input Service
    "WerSvc",             # Windows Error Reporting Service
    "DoSvc",              # Delivery Optimization
    "CscService",         # Offline Files
    "RetailDemo"          # Retail Demo Service
)

# Function to stop and disable a service safely
function Disable-ServiceSafe {
    param (
        [string]$serviceName
    )
    $svc = Get-Service -Name $serviceName -ErrorAction SilentlyContinue
    if ($null -ne $svc) {
        if ($svc.Status -eq 'Running') {
            Write-Host "Stopping service: $serviceName"
            Stop-Service -Name $serviceName -Force
        }
        Write-Host "Disabling service: $serviceName"
        Set-Service -Name $serviceName -StartupType Disabled
    } else {
        Write-Host "Service not found: $serviceName"
    }
}

# Iterate and disable each service
foreach ($svcName in $servicesToDisable) {
    Disable-ServiceSafe -serviceName $svcName
}

# Special handling: Disable Xbox services by display name (covers future renames)
$displayNames = @(
    "Xbox Live Auth Manager",
    "Xbox Live Game Save",
    "Xbox Accessory Management Service",
    "Xbox Live Networking Service"
)
foreach ($displayName in $displayNames) {
    $svc = Get-Service | Where-Object { $_.DisplayName -eq $displayName }
    if ($null -ne $svc) {
        if ($svc.Status -eq 'Running') {
            Write-Host "Stopping service (DisplayName): $displayName"
            Stop-Service -Name $svc.Name -Force
        }
        Write-Host "Disabling service (DisplayName): $displayName"
        Set-Service -Name $svc.Name -StartupType Disabled
    }
}

Write-Host "All unnecessary services processed."
